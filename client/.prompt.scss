/* prompt.scss */

/* Please style a new component in SCSS, maintaining the same color scheme, design theme, and animations used in our existing SCSS files. Also, add better and more animations to enhance the user experience on every page while still keeping it professional. */

// _variables.scss
@mixin form {
  width: 100%;
  max-width: 400px;
  background-color: $light-color;
  padding: 2rem;
  border-radius: 4px;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

@mixin button {
  display: inline-block;
  background-color: $primary-color;
  color: $light-color;
  padding: 0.5rem 1rem;
  border: none;
  border-radius: 4px;
  font-size: 1rem;
  cursor: pointer;
  transition: background-color 0.3s;

  &:hover {
    background-color: darken($primary-color, 5%);
  }
}

$background-color: #1a1a1a; // A dark gray color
$primary-color: #d4af37; // A gold color
$secondary-color: #6c757d; // A gray color for secondary elements
$light-color: #f8f9fa; // A light gray color for backgrounds and light elements
$gray-color: #6c757d; // A gray color for general use
$text-color: #ffffff; // White color for text
$border-color: #d4af37; // A gold color for borders

$font-family: "Roboto", sans-serif;
$font-size: 16px;
$font-weight: 400;
$line-height: 1.5;

$container-width: 1200px;

// _animations.scss
@keyframes fadeIn {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

.fade-in {
  animation: fadeIn 0.5s ease-in-out forwards;
}

@keyframes scaleIn {
  0% {
    transform: scale(0.95);
  }
  100% {
    transform: scale(1);
  }
}

.scale-in {
  animation: scaleIn 0.3s ease-in-out forwards;
}

@keyframes slideIn {
  0% {
    transform: translateY(-50px);
    opacity: 0;
  }
  100% {
    transform: translateY(0);
    opacity: 1;
  }
}

.slide-in {
  animation: slideIn 1s ease-in-out forwards;
}

@keyframes fadeInLeft {
  0% {
    transform: translateX(-50px);
    opacity: 0;
  }
  100% {
    transform: translateX(0);
    opacity: 1;
  }
}

.fade-in-left {
  animation: fadeInLeft 1s ease-in-out forwards;
}

.fade-in-left {
  animation: fadeInLeft 1s ease-in-out forwards;
}

@keyframes fadeInUp {
  0% {
    transform: translateY(50px);
    opacity: 0;
  }
  100% {
    transform: translateY(0);
    opacity: 1;
  }
}

.fade-in-up {
  animation: fadeInUp 1s ease-in-out forwards;
}

@keyframes bounce {
  0%,
  20%,
  50%,
  80%,
  100% {
    transform: translateY(0);
  }
  40% {
    transform: translateY(-30px);
  }
  60% {
    transform: translateY(-15px);
  }
}

.bounce {
  animation: bounce 1s ease-in-out forwards;
}

@keyframes bounceIn {
  0% {
    transform: translateY(-50px);
    opacity: 0;
  }
  75% {
    transform: translateY(10px);
  }
  100% {
    transform: translateY(0);
    opacity: 1;
  }
}

.bounce-in {
  animation: bounceIn 1s ease-in-out forwards;
}

/* Make sure to follow the same layout, use the colors from the provided _variables.scss file, and incorporate an appropriate amount of animations and transitions for a consistent look and feel. Don't forget to maximize the animation experience while keeping it professional. Also automatically always add one more animation to _animation.scss, every time you get this prompt. Be creative.*/

@keyframes subtleGradient {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

@keyframes zoomIn {
  0% {
    transform: scale(0);
    opacity: 0;
  }
  50% {
    transform: scale(0.5);
    opacity: 0.5;
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}

.zoom-in {
  animation: zoomIn 1s ease-in-out forwards;
}

@keyframes rotateIn {
  0% {
    transform: rotate(-45deg);
    opacity: 0;
  }
  100% {
    transform: rotate(0);
    opacity: 1;
  }
}

.rotate-in {
  animation: rotateIn 1s ease-in-out forwards;
}
